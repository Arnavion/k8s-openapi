initSidebarItems({"enum":[["CreateNamespacedDeploymentRollbackResponse","Use `<CreateNamespacedDeploymentRollbackResponse as Response>::try_from_parts` to parse the HTTP response body of [`DeploymentRollback::create_namespaced_deployment_rollback`]"],["ReadNamespacedControllerRevisionResponse","Use `<ReadNamespacedControllerRevisionResponse as Response>::try_from_parts` to parse the HTTP response body of [`ControllerRevision::read_namespaced_controller_revision`]"],["ReadNamespacedDeploymentResponse","Use `<ReadNamespacedDeploymentResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::read_namespaced_deployment`]"],["ReadNamespacedDeploymentScaleResponse","Use `<ReadNamespacedDeploymentScaleResponse as Response>::try_from_parts` to parse the HTTP response body of [`Scale::read_namespaced_deployment_scale`]"],["ReadNamespacedDeploymentStatusResponse","Use `<ReadNamespacedDeploymentStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::read_namespaced_deployment_status`]"],["ReadNamespacedStatefulSetResponse","Use `<ReadNamespacedStatefulSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`StatefulSet::read_namespaced_stateful_set`]"],["ReadNamespacedStatefulSetScaleResponse","Use `<ReadNamespacedStatefulSetScaleResponse as Response>::try_from_parts` to parse the HTTP response body of [`Scale::read_namespaced_stateful_set_scale`]"],["ReadNamespacedStatefulSetStatusResponse","Use `<ReadNamespacedStatefulSetStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`StatefulSet::read_namespaced_stateful_set_status`]"]],"struct":[["ControllerRevision","DEPRECATED - This group version of ControllerRevision is deprecated by apps/v1beta2/ControllerRevision. See the release notes for more information. ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers."],["Deployment","DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets."],["DeploymentCondition","DeploymentCondition describes the state of a deployment at a certain point."],["DeploymentRollback","DEPRECATED. DeploymentRollback stores the information required to rollback a deployment."],["DeploymentSpec","DeploymentSpec is the specification of the desired behavior of the Deployment."],["DeploymentStatus","DeploymentStatus is the most recently observed status of the Deployment."],["DeploymentStrategy","DeploymentStrategy describes how to replace existing pods with new ones."],["ReadNamespacedControllerRevisionOptional","Optional parameters of [`ControllerRevision::read_namespaced_controller_revision`]"],["ReadNamespacedDeploymentOptional","Optional parameters of [`Deployment::read_namespaced_deployment`]"],["ReadNamespacedDeploymentScaleOptional","Optional parameters of [`Scale::read_namespaced_deployment_scale`]"],["ReadNamespacedDeploymentStatusOptional","Optional parameters of [`Deployment::read_namespaced_deployment_status`]"],["ReadNamespacedStatefulSetOptional","Optional parameters of [`StatefulSet::read_namespaced_stateful_set`]"],["ReadNamespacedStatefulSetScaleOptional","Optional parameters of [`Scale::read_namespaced_stateful_set_scale`]"],["ReadNamespacedStatefulSetStatusOptional","Optional parameters of [`StatefulSet::read_namespaced_stateful_set_status`]"],["RollbackConfig","DEPRECATED."],["RollingUpdateDeployment","Spec to control the desired behavior of rolling update."],["RollingUpdateStatefulSetStrategy","RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType."],["Scale","Scale represents a scaling request for a resource."],["ScaleSpec","ScaleSpec describes the attributes of a scale subresource"],["ScaleStatus","ScaleStatus represents the current status of a scale subresource."],["StatefulSet","DEPRECATED - This group version of StatefulSet is deprecated by apps/v1beta2/StatefulSet. See the release notes for more information. StatefulSet represents a set of pods with consistent identities. Identities are defined as:  - Network: A single stable DNS and hostname.  - Storage: As many VolumeClaims as requested. The StatefulSet guarantees that a given network identity will always map to the same storage identity."],["StatefulSetCondition","StatefulSetCondition describes the state of a statefulset at a certain point."],["StatefulSetSpec","A StatefulSetSpec is the specification of a StatefulSet."],["StatefulSetStatus","StatefulSetStatus represents the current state of a StatefulSet."],["StatefulSetUpdateStrategy","StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy."]]});