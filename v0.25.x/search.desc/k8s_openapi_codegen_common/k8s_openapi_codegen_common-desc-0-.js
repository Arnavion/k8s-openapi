searchState.loadedDescShard("k8s_openapi_codegen_common", 0, "This crate contains common code for the <code>k8s-openapi</code> code …\nError type reported by <code>run</code>\nWhether <code>run</code> should generate an impl of <code>schemars::JsonSchema</code>…\nA mechanism for converting (the components of) an openapi …\nStatistics from a successful invocation of <code>run</code>\nUsed to create an impl of <code>std::io::Write</code> for each type …\nThe impl of <code>std::io::Write</code> for each type that the type’s …\nThis function is invoked when …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts the given string into a string that can be used …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an impl of <code>std::io::Write</code> for each type that the …\nEach invocation of this function generates a single type …\nThis module contains types related to the OpenAPI types …\nAn optional feature that the impl of <code>schemars::JsonSchema</code> …\nA definition path.\nThe <code>&quot;info&quot;</code> property of an OpenAPI spec.\nAn integer format. This corresponds to the <code>&quot;format&quot;</code> …\nThe value of an <code>&quot;x-kubernetes-action&quot;</code> annotation on an …\nThe value of an <code>x-kubernetes-group-version-kind</code> annotation …\nThe value of an <code>x-kubernetes-list-type</code> annotation on a …\nThe value of an <code>x-kubernetes-map-type</code> annotation on a …\nA number format. This corresponds to the <code>&quot;format&quot;</code> property …\nAn API operation.\nThe path of an API operation.\nThe name of a property of a schema type with a <code>&quot;properties&quot;</code>…\nThe path specified by a <code>&quot;$ref&quot;</code> property.\nThe schema of a definition or operation parameter.\nThe kind of a <code>Schema</code>\nThe whole <code>Spec</code> object. An OpenAPI spec JSON file can be …\nA string format. This corresponds to the <code>&quot;format&quot;</code> property …\nA type definition.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUsed to enable or disable the auto-generated impl of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUsed to store the definition path of the corresponding …")