initSidebarItems({"enum":[["ReadCertificateSigningRequestApprovalResponse","Use `<ReadCertificateSigningRequestApprovalResponse as Response>::try_from_parts` to parse the HTTP response body of [`CertificateSigningRequest::read_certificate_signing_request_approval`]"],["ReadCertificateSigningRequestResponse","Use `<ReadCertificateSigningRequestResponse as Response>::try_from_parts` to parse the HTTP response body of [`CertificateSigningRequest::read_certificate_signing_request`]"],["ReadCertificateSigningRequestStatusResponse","Use `<ReadCertificateSigningRequestStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`CertificateSigningRequest::read_certificate_signing_request_status`]"]],"struct":[["CertificateSigningRequest","CertificateSigningRequest objects provide a mechanism to obtain x509 certificates by submitting a certificate signing request, and having it asynchronously approved and issued."],["CertificateSigningRequestCondition","CertificateSigningRequestCondition describes a condition of a CertificateSigningRequest object"],["CertificateSigningRequestSpec","CertificateSigningRequestSpec contains the certificate request."],["CertificateSigningRequestStatus","CertificateSigningRequestStatus contains conditions used to indicate approved/denied/failed status of the request, and the issued certificate."],["ReadCertificateSigningRequestApprovalOptional","Optional parameters of [`CertificateSigningRequest::read_certificate_signing_request_approval`]"],["ReadCertificateSigningRequestOptional","Optional parameters of [`CertificateSigningRequest::read_certificate_signing_request`]"],["ReadCertificateSigningRequestStatusOptional","Optional parameters of [`CertificateSigningRequest::read_certificate_signing_request_status`]"]]});