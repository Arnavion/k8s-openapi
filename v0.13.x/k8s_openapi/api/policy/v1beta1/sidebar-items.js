initSidebarItems({"enum":[["ReadNamespacedPodDisruptionBudgetResponse","Use `<ReadNamespacedPodDisruptionBudgetResponse as Response>::try_from_parts` to parse the HTTP response body of [`PodDisruptionBudget::read_namespaced_pod_disruption_budget`]"],["ReadNamespacedPodDisruptionBudgetStatusResponse","Use `<ReadNamespacedPodDisruptionBudgetStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`PodDisruptionBudget::read_namespaced_pod_disruption_budget_status`]"],["ReadPodSecurityPolicyResponse","Use `<ReadPodSecurityPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`PodSecurityPolicy::read_pod_security_policy`]"]],"struct":[["AllowedCSIDriver","AllowedCSIDriver represents a single inline CSI Driver that is allowed to be used."],["AllowedFlexVolume","AllowedFlexVolume represents a single Flexvolume that is allowed to be used."],["AllowedHostPath","AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined."],["FSGroupStrategyOptions","FSGroupStrategyOptions defines the strategy type and options used to create the strategy."],["HostPortRange","HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined."],["IDRange","IDRange provides a min/max of an allowed range of IDs."],["PodDisruptionBudget","PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods"],["PodDisruptionBudgetSpec","PodDisruptionBudgetSpec is a description of a PodDisruptionBudget."],["PodDisruptionBudgetStatus","PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system."],["PodSecurityPolicy","PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container. Deprecated in 1.21."],["PodSecurityPolicySpec","PodSecurityPolicySpec defines the policy enforced."],["ReadNamespacedPodDisruptionBudgetOptional","Optional parameters of [`PodDisruptionBudget::read_namespaced_pod_disruption_budget`]"],["ReadNamespacedPodDisruptionBudgetStatusOptional","Optional parameters of [`PodDisruptionBudget::read_namespaced_pod_disruption_budget_status`]"],["ReadPodSecurityPolicyOptional","Optional parameters of [`PodSecurityPolicy::read_pod_security_policy`]"],["RunAsGroupStrategyOptions","RunAsGroupStrategyOptions defines the strategy type and any options used to create the strategy."],["RunAsUserStrategyOptions","RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy."],["RuntimeClassStrategyOptions","RuntimeClassStrategyOptions define the strategy that will dictate the allowable RuntimeClasses for a pod."],["SELinuxStrategyOptions","SELinuxStrategyOptions defines the strategy type and any options used to create the strategy."],["SupplementalGroupsStrategyOptions","SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy."]]});