initSidebarItems({"enum":[["CreateNamespacedNetworkPolicyResponse","Use `<CreateNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::create_namespaced_network_policy`]"],["DeleteCollectionNamespacedNetworkPolicyResponse","Use `<DeleteCollectionNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::delete_collection_namespaced_network_policy`]"],["DeleteNamespacedNetworkPolicyResponse","Use `<DeleteNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::delete_namespaced_network_policy`]"],["ListNamespacedNetworkPolicyResponse","Use `<ListNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::list_namespaced_network_policy`]"],["ListNetworkPolicyForAllNamespacesResponse","Use `<ListNetworkPolicyForAllNamespacesResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::list_network_policy_for_all_namespaces`]"],["PatchNamespacedNetworkPolicyResponse","Use `<PatchNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::patch_namespaced_network_policy`]"],["ReadNamespacedNetworkPolicyResponse","Use `<ReadNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::read_namespaced_network_policy`]"],["ReplaceNamespacedNetworkPolicyResponse","Use `<ReplaceNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::replace_namespaced_network_policy`]"],["WatchNamespacedNetworkPolicyResponse","Use `<WatchNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::watch_namespaced_network_policy`]"],["WatchNetworkPolicyForAllNamespacesResponse","Use `<WatchNetworkPolicyForAllNamespacesResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::watch_network_policy_for_all_namespaces`]"]],"struct":[["CreateNamespacedNetworkPolicyOptional","Optional parameters of [`NetworkPolicy::create_namespaced_network_policy`]"],["IPBlock","IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule."],["NetworkPolicy","NetworkPolicy describes what network traffic is allowed for a set of Pods"],["NetworkPolicyEgressRule","NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8"],["NetworkPolicyIngressRule","NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from."],["NetworkPolicyList","NetworkPolicyList is a list of NetworkPolicy objects."],["NetworkPolicyPeer","NetworkPolicyPeer describes a peer to allow traffic from. Only certain combinations of fields are allowed"],["NetworkPolicyPort","NetworkPolicyPort describes a port to allow traffic on"],["NetworkPolicySpec","NetworkPolicySpec provides the specification of a NetworkPolicy"],["ReadNamespacedNetworkPolicyOptional","Optional parameters of [`NetworkPolicy::read_namespaced_network_policy`]"],["ReplaceNamespacedNetworkPolicyOptional","Optional parameters of [`NetworkPolicy::replace_namespaced_network_policy`]"]]});