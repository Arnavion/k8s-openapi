initSidebarItems({"enum":[["CreateNamespacedEventResponse","Use `<CreateNamespacedEventResponse as Response>::try_from_parts` to parse the HTTP response body of [`Event::create_namespaced_event`]"],["DeleteCollectionNamespacedEventResponse","Use `<DeleteCollectionNamespacedEventResponse as Response>::try_from_parts` to parse the HTTP response body of [`Event::delete_collection_namespaced_event`]"],["DeleteNamespacedEventResponse","Use `<DeleteNamespacedEventResponse as Response>::try_from_parts` to parse the HTTP response body of [`Event::delete_namespaced_event`]"],["ListEventForAllNamespacesResponse","Use `<ListEventForAllNamespacesResponse as Response>::try_from_parts` to parse the HTTP response body of [`Event::list_event_for_all_namespaces`]"],["ListNamespacedEventResponse","Use `<ListNamespacedEventResponse as Response>::try_from_parts` to parse the HTTP response body of [`Event::list_namespaced_event`]"],["PatchNamespacedEventResponse","Use `<PatchNamespacedEventResponse as Response>::try_from_parts` to parse the HTTP response body of [`Event::patch_namespaced_event`]"],["ReadNamespacedEventResponse","Use `<ReadNamespacedEventResponse as Response>::try_from_parts` to parse the HTTP response body of [`Event::read_namespaced_event`]"],["ReplaceNamespacedEventResponse","Use `<ReplaceNamespacedEventResponse as Response>::try_from_parts` to parse the HTTP response body of [`Event::replace_namespaced_event`]"],["WatchEventForAllNamespacesResponse","Use `<WatchEventForAllNamespacesResponse as Response>::try_from_parts` to parse the HTTP response body of [`Event::watch_event_for_all_namespaces`]"],["WatchNamespacedEventResponse","Use `<WatchNamespacedEventResponse as Response>::try_from_parts` to parse the HTTP response body of [`Event::watch_namespaced_event`]"]],"struct":[["CreateNamespacedEventOptional","Optional parameters of [`Event::create_namespaced_event`]"],["Event","Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system."],["EventList","EventList is a list of Event objects."],["EventSeries","EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time."],["ReadNamespacedEventOptional","Optional parameters of [`Event::read_namespaced_event`]"],["ReplaceNamespacedEventOptional","Optional parameters of [`Event::replace_namespaced_event`]"]]});