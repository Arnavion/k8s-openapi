initSidebarItems({"enum":[["CreateNamespacedDaemonSetResponse","Use `<CreateNamespacedDaemonSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`DaemonSet::create_namespaced_daemon_set`]"],["CreateNamespacedDeploymentResponse","Use `<CreateNamespacedDeploymentResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::create_namespaced_deployment`]"],["CreateNamespacedDeploymentRollbackResponse","Use `<CreateNamespacedDeploymentRollbackResponse as Response>::try_from_parts` to parse the HTTP response body of [`DeploymentRollback::create_namespaced_deployment_rollback`]"],["CreateNamespacedIngressResponse","Use `<CreateNamespacedIngressResponse as Response>::try_from_parts` to parse the HTTP response body of [`Ingress::create_namespaced_ingress`]"],["CreateNamespacedNetworkPolicyResponse","Use `<CreateNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::create_namespaced_network_policy`]"],["CreateNamespacedReplicaSetResponse","Use `<CreateNamespacedReplicaSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`ReplicaSet::create_namespaced_replica_set`]"],["CreatePodSecurityPolicyResponse","Use `<CreatePodSecurityPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`PodSecurityPolicy::create_pod_security_policy`]"],["DeleteCollectionNamespacedDaemonSetResponse","Use `<DeleteCollectionNamespacedDaemonSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`DaemonSet::delete_collection_namespaced_daemon_set`]"],["DeleteCollectionNamespacedDeploymentResponse","Use `<DeleteCollectionNamespacedDeploymentResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::delete_collection_namespaced_deployment`]"],["DeleteCollectionNamespacedIngressResponse","Use `<DeleteCollectionNamespacedIngressResponse as Response>::try_from_parts` to parse the HTTP response body of [`Ingress::delete_collection_namespaced_ingress`]"],["DeleteCollectionNamespacedNetworkPolicyResponse","Use `<DeleteCollectionNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::delete_collection_namespaced_network_policy`]"],["DeleteCollectionNamespacedReplicaSetResponse","Use `<DeleteCollectionNamespacedReplicaSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`ReplicaSet::delete_collection_namespaced_replica_set`]"],["DeleteCollectionPodSecurityPolicyResponse","Use `<DeleteCollectionPodSecurityPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`PodSecurityPolicy::delete_collection_pod_security_policy`]"],["DeleteNamespacedDaemonSetResponse","Use `<DeleteNamespacedDaemonSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`DaemonSet::delete_namespaced_daemon_set`]"],["DeleteNamespacedDeploymentResponse","Use `<DeleteNamespacedDeploymentResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::delete_namespaced_deployment`]"],["DeleteNamespacedIngressResponse","Use `<DeleteNamespacedIngressResponse as Response>::try_from_parts` to parse the HTTP response body of [`Ingress::delete_namespaced_ingress`]"],["DeleteNamespacedNetworkPolicyResponse","Use `<DeleteNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::delete_namespaced_network_policy`]"],["DeleteNamespacedReplicaSetResponse","Use `<DeleteNamespacedReplicaSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`ReplicaSet::delete_namespaced_replica_set`]"],["DeletePodSecurityPolicyResponse","Use `<DeletePodSecurityPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`PodSecurityPolicy::delete_pod_security_policy`]"],["ListDaemonSetForAllNamespacesResponse","Use `<ListDaemonSetForAllNamespacesResponse as Response>::try_from_parts` to parse the HTTP response body of [`DaemonSet::list_daemon_set_for_all_namespaces`]"],["ListDeploymentForAllNamespacesResponse","Use `<ListDeploymentForAllNamespacesResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::list_deployment_for_all_namespaces`]"],["ListIngressForAllNamespacesResponse","Use `<ListIngressForAllNamespacesResponse as Response>::try_from_parts` to parse the HTTP response body of [`Ingress::list_ingress_for_all_namespaces`]"],["ListNamespacedDaemonSetResponse","Use `<ListNamespacedDaemonSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`DaemonSet::list_namespaced_daemon_set`]"],["ListNamespacedDeploymentResponse","Use `<ListNamespacedDeploymentResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::list_namespaced_deployment`]"],["ListNamespacedIngressResponse","Use `<ListNamespacedIngressResponse as Response>::try_from_parts` to parse the HTTP response body of [`Ingress::list_namespaced_ingress`]"],["ListNamespacedNetworkPolicyResponse","Use `<ListNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::list_namespaced_network_policy`]"],["ListNamespacedReplicaSetResponse","Use `<ListNamespacedReplicaSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`ReplicaSet::list_namespaced_replica_set`]"],["ListNetworkPolicyForAllNamespacesResponse","Use `<ListNetworkPolicyForAllNamespacesResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::list_network_policy_for_all_namespaces`]"],["ListPodSecurityPolicyResponse","Use `<ListPodSecurityPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`PodSecurityPolicy::list_pod_security_policy`]"],["ListReplicaSetForAllNamespacesResponse","Use `<ListReplicaSetForAllNamespacesResponse as Response>::try_from_parts` to parse the HTTP response body of [`ReplicaSet::list_replica_set_for_all_namespaces`]"],["PatchNamespacedDaemonSetResponse","Use `<PatchNamespacedDaemonSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`DaemonSet::patch_namespaced_daemon_set`]"],["PatchNamespacedDaemonSetStatusResponse","Use `<PatchNamespacedDaemonSetStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`DaemonSet::patch_namespaced_daemon_set_status`]"],["PatchNamespacedDeploymentResponse","Use `<PatchNamespacedDeploymentResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::patch_namespaced_deployment`]"],["PatchNamespacedDeploymentScaleResponse","Use `<PatchNamespacedDeploymentScaleResponse as Response>::try_from_parts` to parse the HTTP response body of [`Scale::patch_namespaced_deployment_scale`]"],["PatchNamespacedDeploymentStatusResponse","Use `<PatchNamespacedDeploymentStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::patch_namespaced_deployment_status`]"],["PatchNamespacedIngressResponse","Use `<PatchNamespacedIngressResponse as Response>::try_from_parts` to parse the HTTP response body of [`Ingress::patch_namespaced_ingress`]"],["PatchNamespacedIngressStatusResponse","Use `<PatchNamespacedIngressStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`Ingress::patch_namespaced_ingress_status`]"],["PatchNamespacedNetworkPolicyResponse","Use `<PatchNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::patch_namespaced_network_policy`]"],["PatchNamespacedReplicaSetResponse","Use `<PatchNamespacedReplicaSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`ReplicaSet::patch_namespaced_replica_set`]"],["PatchNamespacedReplicaSetScaleResponse","Use `<PatchNamespacedReplicaSetScaleResponse as Response>::try_from_parts` to parse the HTTP response body of [`Scale::patch_namespaced_replica_set_scale`]"],["PatchNamespacedReplicaSetStatusResponse","Use `<PatchNamespacedReplicaSetStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`ReplicaSet::patch_namespaced_replica_set_status`]"],["PatchNamespacedReplicationControllerDummyScaleResponse","Use `<PatchNamespacedReplicationControllerDummyScaleResponse as Response>::try_from_parts` to parse the HTTP response body of [`Scale::patch_namespaced_replication_controller_dummy_scale`]"],["PatchPodSecurityPolicyResponse","Use `<PatchPodSecurityPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`PodSecurityPolicy::patch_pod_security_policy`]"],["ReadNamespacedDaemonSetResponse","Use `<ReadNamespacedDaemonSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`DaemonSet::read_namespaced_daemon_set`]"],["ReadNamespacedDaemonSetStatusResponse","Use `<ReadNamespacedDaemonSetStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`DaemonSet::read_namespaced_daemon_set_status`]"],["ReadNamespacedDeploymentResponse","Use `<ReadNamespacedDeploymentResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::read_namespaced_deployment`]"],["ReadNamespacedDeploymentScaleResponse","Use `<ReadNamespacedDeploymentScaleResponse as Response>::try_from_parts` to parse the HTTP response body of [`Scale::read_namespaced_deployment_scale`]"],["ReadNamespacedDeploymentStatusResponse","Use `<ReadNamespacedDeploymentStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::read_namespaced_deployment_status`]"],["ReadNamespacedIngressResponse","Use `<ReadNamespacedIngressResponse as Response>::try_from_parts` to parse the HTTP response body of [`Ingress::read_namespaced_ingress`]"],["ReadNamespacedIngressStatusResponse","Use `<ReadNamespacedIngressStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`Ingress::read_namespaced_ingress_status`]"],["ReadNamespacedNetworkPolicyResponse","Use `<ReadNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::read_namespaced_network_policy`]"],["ReadNamespacedReplicaSetResponse","Use `<ReadNamespacedReplicaSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`ReplicaSet::read_namespaced_replica_set`]"],["ReadNamespacedReplicaSetScaleResponse","Use `<ReadNamespacedReplicaSetScaleResponse as Response>::try_from_parts` to parse the HTTP response body of [`Scale::read_namespaced_replica_set_scale`]"],["ReadNamespacedReplicaSetStatusResponse","Use `<ReadNamespacedReplicaSetStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`ReplicaSet::read_namespaced_replica_set_status`]"],["ReadNamespacedReplicationControllerDummyScaleResponse","Use `<ReadNamespacedReplicationControllerDummyScaleResponse as Response>::try_from_parts` to parse the HTTP response body of [`Scale::read_namespaced_replication_controller_dummy_scale`]"],["ReadPodSecurityPolicyResponse","Use `<ReadPodSecurityPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`PodSecurityPolicy::read_pod_security_policy`]"],["ReplaceNamespacedDaemonSetResponse","Use `<ReplaceNamespacedDaemonSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`DaemonSet::replace_namespaced_daemon_set`]"],["ReplaceNamespacedDaemonSetStatusResponse","Use `<ReplaceNamespacedDaemonSetStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`DaemonSet::replace_namespaced_daemon_set_status`]"],["ReplaceNamespacedDeploymentResponse","Use `<ReplaceNamespacedDeploymentResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::replace_namespaced_deployment`]"],["ReplaceNamespacedDeploymentScaleResponse","Use `<ReplaceNamespacedDeploymentScaleResponse as Response>::try_from_parts` to parse the HTTP response body of [`Scale::replace_namespaced_deployment_scale`]"],["ReplaceNamespacedDeploymentStatusResponse","Use `<ReplaceNamespacedDeploymentStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::replace_namespaced_deployment_status`]"],["ReplaceNamespacedIngressResponse","Use `<ReplaceNamespacedIngressResponse as Response>::try_from_parts` to parse the HTTP response body of [`Ingress::replace_namespaced_ingress`]"],["ReplaceNamespacedIngressStatusResponse","Use `<ReplaceNamespacedIngressStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`Ingress::replace_namespaced_ingress_status`]"],["ReplaceNamespacedNetworkPolicyResponse","Use `<ReplaceNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::replace_namespaced_network_policy`]"],["ReplaceNamespacedReplicaSetResponse","Use `<ReplaceNamespacedReplicaSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`ReplicaSet::replace_namespaced_replica_set`]"],["ReplaceNamespacedReplicaSetScaleResponse","Use `<ReplaceNamespacedReplicaSetScaleResponse as Response>::try_from_parts` to parse the HTTP response body of [`Scale::replace_namespaced_replica_set_scale`]"],["ReplaceNamespacedReplicaSetStatusResponse","Use `<ReplaceNamespacedReplicaSetStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`ReplicaSet::replace_namespaced_replica_set_status`]"],["ReplaceNamespacedReplicationControllerDummyScaleResponse","Use `<ReplaceNamespacedReplicationControllerDummyScaleResponse as Response>::try_from_parts` to parse the HTTP response body of [`Scale::replace_namespaced_replication_controller_dummy_scale`]"],["ReplacePodSecurityPolicyResponse","Use `<ReplacePodSecurityPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`PodSecurityPolicy::replace_pod_security_policy`]"],["WatchDaemonSetForAllNamespacesResponse","Use `<WatchDaemonSetForAllNamespacesResponse as Response>::try_from_parts` to parse the HTTP response body of [`DaemonSet::watch_daemon_set_for_all_namespaces`]"],["WatchDeploymentForAllNamespacesResponse","Use `<WatchDeploymentForAllNamespacesResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::watch_deployment_for_all_namespaces`]"],["WatchIngressForAllNamespacesResponse","Use `<WatchIngressForAllNamespacesResponse as Response>::try_from_parts` to parse the HTTP response body of [`Ingress::watch_ingress_for_all_namespaces`]"],["WatchNamespacedDaemonSetResponse","Use `<WatchNamespacedDaemonSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`DaemonSet::watch_namespaced_daemon_set`]"],["WatchNamespacedDeploymentResponse","Use `<WatchNamespacedDeploymentResponse as Response>::try_from_parts` to parse the HTTP response body of [`Deployment::watch_namespaced_deployment`]"],["WatchNamespacedIngressResponse","Use `<WatchNamespacedIngressResponse as Response>::try_from_parts` to parse the HTTP response body of [`Ingress::watch_namespaced_ingress`]"],["WatchNamespacedNetworkPolicyResponse","Use `<WatchNamespacedNetworkPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::watch_namespaced_network_policy`]"],["WatchNamespacedReplicaSetResponse","Use `<WatchNamespacedReplicaSetResponse as Response>::try_from_parts` to parse the HTTP response body of [`ReplicaSet::watch_namespaced_replica_set`]"],["WatchNetworkPolicyForAllNamespacesResponse","Use `<WatchNetworkPolicyForAllNamespacesResponse as Response>::try_from_parts` to parse the HTTP response body of [`NetworkPolicy::watch_network_policy_for_all_namespaces`]"],["WatchPodSecurityPolicyResponse","Use `<WatchPodSecurityPolicyResponse as Response>::try_from_parts` to parse the HTTP response body of [`PodSecurityPolicy::watch_pod_security_policy`]"],["WatchReplicaSetForAllNamespacesResponse","Use `<WatchReplicaSetForAllNamespacesResponse as Response>::try_from_parts` to parse the HTTP response body of [`ReplicaSet::watch_replica_set_for_all_namespaces`]"]],"struct":[["AllowedCSIDriver","AllowedCSIDriver represents a single inline CSI Driver that is allowed to be used."],["AllowedFlexVolume","AllowedFlexVolume represents a single Flexvolume that is allowed to be used. Deprecated: use AllowedFlexVolume from policy API Group instead."],["AllowedHostPath","AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined. Deprecated: use AllowedHostPath from policy API Group instead."],["CreateNamespacedDaemonSetOptional","Optional parameters of [`DaemonSet::create_namespaced_daemon_set`]"],["CreateNamespacedDeploymentOptional","Optional parameters of [`Deployment::create_namespaced_deployment`]"],["CreateNamespacedDeploymentRollbackOptional","Optional parameters of [`DeploymentRollback::create_namespaced_deployment_rollback`]"],["CreateNamespacedIngressOptional","Optional parameters of [`Ingress::create_namespaced_ingress`]"],["CreateNamespacedNetworkPolicyOptional","Optional parameters of [`NetworkPolicy::create_namespaced_network_policy`]"],["CreateNamespacedReplicaSetOptional","Optional parameters of [`ReplicaSet::create_namespaced_replica_set`]"],["CreatePodSecurityPolicyOptional","Optional parameters of [`PodSecurityPolicy::create_pod_security_policy`]"],["DaemonSet","DEPRECATED - This group version of DaemonSet is deprecated by apps/v1beta2/DaemonSet. See the release notes for more information. DaemonSet represents the configuration of a daemon set."],["DaemonSetCondition","DaemonSetCondition describes the state of a DaemonSet at a certain point."],["DaemonSetList","DaemonSetList is a collection of daemon sets."],["DaemonSetSpec","DaemonSetSpec is the specification of a daemon set."],["DaemonSetStatus","DaemonSetStatus represents the current status of a daemon set."],["DaemonSetUpdateStrategy",""],["Deployment","DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets."],["DeploymentCondition","DeploymentCondition describes the state of a deployment at a certain point."],["DeploymentList","DeploymentList is a list of Deployments."],["DeploymentRollback","DEPRECATED. DeploymentRollback stores the information required to rollback a deployment."],["DeploymentSpec","DeploymentSpec is the specification of the desired behavior of the Deployment."],["DeploymentStatus","DeploymentStatus is the most recently observed status of the Deployment."],["DeploymentStrategy","DeploymentStrategy describes how to replace existing pods with new ones."],["FSGroupStrategyOptions","FSGroupStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use FSGroupStrategyOptions from policy API Group instead."],["HTTPIngressPath","HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend."],["HTTPIngressRuleValue","HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'."],["HostPortRange","HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined. Deprecated: use HostPortRange from policy API Group instead."],["IDRange","IDRange provides a min/max of an allowed range of IDs. Deprecated: use IDRange from policy API Group instead."],["IPBlock","DEPRECATED 1.9 - This group version of IPBlock is deprecated by networking/v1/IPBlock. IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule."],["Ingress","Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc. DEPRECATED - This group version of Ingress is deprecated by networking.k8s.io/v1beta1 Ingress. See the release notes for more information."],["IngressBackend","IngressBackend describes all endpoints for a given service and port."],["IngressList","IngressList is a collection of Ingress."],["IngressRule","IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue."],["IngressSpec","IngressSpec describes the Ingress the user wishes to exist."],["IngressStatus","IngressStatus describe the current state of the Ingress."],["IngressTLS","IngressTLS describes the transport layer security associated with an Ingress."],["NetworkPolicy","DEPRECATED 1.9 - This group version of NetworkPolicy is deprecated by networking/v1/NetworkPolicy. NetworkPolicy describes what network traffic is allowed for a set of Pods"],["NetworkPolicyEgressRule","DEPRECATED 1.9 - This group version of NetworkPolicyEgressRule is deprecated by networking/v1/NetworkPolicyEgressRule. NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8"],["NetworkPolicyIngressRule","DEPRECATED 1.9 - This group version of NetworkPolicyIngressRule is deprecated by networking/v1/NetworkPolicyIngressRule. This NetworkPolicyIngressRule matches traffic if and only if the traffic matches both ports AND from."],["NetworkPolicyList","DEPRECATED 1.9 - This group version of NetworkPolicyList is deprecated by networking/v1/NetworkPolicyList. Network Policy List is a list of NetworkPolicy objects."],["NetworkPolicyPeer","DEPRECATED 1.9 - This group version of NetworkPolicyPeer is deprecated by networking/v1/NetworkPolicyPeer."],["NetworkPolicyPort","DEPRECATED 1.9 - This group version of NetworkPolicyPort is deprecated by networking/v1/NetworkPolicyPort."],["NetworkPolicySpec","DEPRECATED 1.9 - This group version of NetworkPolicySpec is deprecated by networking/v1/NetworkPolicySpec."],["PodSecurityPolicy","PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container. Deprecated: use PodSecurityPolicy from policy API Group instead."],["PodSecurityPolicyList","PodSecurityPolicyList is a list of PodSecurityPolicy objects. Deprecated: use PodSecurityPolicyList from policy API Group instead."],["PodSecurityPolicySpec","PodSecurityPolicySpec defines the policy enforced. Deprecated: use PodSecurityPolicySpec from policy API Group instead."],["ReadNamespacedDaemonSetOptional","Optional parameters of [`DaemonSet::read_namespaced_daemon_set`]"],["ReadNamespacedDaemonSetStatusOptional","Optional parameters of [`DaemonSet::read_namespaced_daemon_set_status`]"],["ReadNamespacedDeploymentOptional","Optional parameters of [`Deployment::read_namespaced_deployment`]"],["ReadNamespacedDeploymentScaleOptional","Optional parameters of [`Scale::read_namespaced_deployment_scale`]"],["ReadNamespacedDeploymentStatusOptional","Optional parameters of [`Deployment::read_namespaced_deployment_status`]"],["ReadNamespacedIngressOptional","Optional parameters of [`Ingress::read_namespaced_ingress`]"],["ReadNamespacedIngressStatusOptional","Optional parameters of [`Ingress::read_namespaced_ingress_status`]"],["ReadNamespacedNetworkPolicyOptional","Optional parameters of [`NetworkPolicy::read_namespaced_network_policy`]"],["ReadNamespacedReplicaSetOptional","Optional parameters of [`ReplicaSet::read_namespaced_replica_set`]"],["ReadNamespacedReplicaSetScaleOptional","Optional parameters of [`Scale::read_namespaced_replica_set_scale`]"],["ReadNamespacedReplicaSetStatusOptional","Optional parameters of [`ReplicaSet::read_namespaced_replica_set_status`]"],["ReadNamespacedReplicationControllerDummyScaleOptional","Optional parameters of [`Scale::read_namespaced_replication_controller_dummy_scale`]"],["ReadPodSecurityPolicyOptional","Optional parameters of [`PodSecurityPolicy::read_pod_security_policy`]"],["ReplaceNamespacedDaemonSetOptional","Optional parameters of [`DaemonSet::replace_namespaced_daemon_set`]"],["ReplaceNamespacedDaemonSetStatusOptional","Optional parameters of [`DaemonSet::replace_namespaced_daemon_set_status`]"],["ReplaceNamespacedDeploymentOptional","Optional parameters of [`Deployment::replace_namespaced_deployment`]"],["ReplaceNamespacedDeploymentScaleOptional","Optional parameters of [`Scale::replace_namespaced_deployment_scale`]"],["ReplaceNamespacedDeploymentStatusOptional","Optional parameters of [`Deployment::replace_namespaced_deployment_status`]"],["ReplaceNamespacedIngressOptional","Optional parameters of [`Ingress::replace_namespaced_ingress`]"],["ReplaceNamespacedIngressStatusOptional","Optional parameters of [`Ingress::replace_namespaced_ingress_status`]"],["ReplaceNamespacedNetworkPolicyOptional","Optional parameters of [`NetworkPolicy::replace_namespaced_network_policy`]"],["ReplaceNamespacedReplicaSetOptional","Optional parameters of [`ReplicaSet::replace_namespaced_replica_set`]"],["ReplaceNamespacedReplicaSetScaleOptional","Optional parameters of [`Scale::replace_namespaced_replica_set_scale`]"],["ReplaceNamespacedReplicaSetStatusOptional","Optional parameters of [`ReplicaSet::replace_namespaced_replica_set_status`]"],["ReplaceNamespacedReplicationControllerDummyScaleOptional","Optional parameters of [`Scale::replace_namespaced_replication_controller_dummy_scale`]"],["ReplacePodSecurityPolicyOptional","Optional parameters of [`PodSecurityPolicy::replace_pod_security_policy`]"],["ReplicaSet","DEPRECATED - This group version of ReplicaSet is deprecated by apps/v1beta2/ReplicaSet. See the release notes for more information. ReplicaSet ensures that a specified number of pod replicas are running at any given time."],["ReplicaSetCondition","ReplicaSetCondition describes the state of a replica set at a certain point."],["ReplicaSetList","ReplicaSetList is a collection of ReplicaSets."],["ReplicaSetSpec","ReplicaSetSpec is the specification of a ReplicaSet."],["ReplicaSetStatus","ReplicaSetStatus represents the current status of a ReplicaSet."],["RollbackConfig","DEPRECATED."],["RollingUpdateDaemonSet","Spec to control the desired behavior of daemon set rolling update."],["RollingUpdateDeployment","Spec to control the desired behavior of rolling update."],["RunAsGroupStrategyOptions","RunAsGroupStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use RunAsGroupStrategyOptions from policy API Group instead."],["RunAsUserStrategyOptions","RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use RunAsUserStrategyOptions from policy API Group instead."],["RuntimeClassStrategyOptions","RuntimeClassStrategyOptions define the strategy that will dictate the allowable RuntimeClasses for a pod."],["SELinuxStrategyOptions","SELinuxStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use SELinuxStrategyOptions from policy API Group instead."],["Scale","represents a scaling request for a resource."],["ScaleSpec","describes the attributes of a scale subresource"],["ScaleStatus","represents the current status of a scale subresource."],["SupplementalGroupsStrategyOptions","SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use SupplementalGroupsStrategyOptions from policy API Group instead."]]});