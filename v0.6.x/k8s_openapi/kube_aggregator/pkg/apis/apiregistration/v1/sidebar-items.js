initSidebarItems({"enum":[["CreateAPIServiceResponse","Use `<CreateAPIServiceResponse as Response>::try_from_parts` to parse the HTTP response body of [`APIService::create_api_service`]"],["DeleteAPIServiceResponse","Use `<DeleteAPIServiceResponse as Response>::try_from_parts` to parse the HTTP response body of [`APIService::delete_api_service`]"],["DeleteCollectionAPIServiceResponse","Use `<DeleteCollectionAPIServiceResponse as Response>::try_from_parts` to parse the HTTP response body of [`APIService::delete_collection_api_service`]"],["ListAPIServiceResponse","Use `<ListAPIServiceResponse as Response>::try_from_parts` to parse the HTTP response body of [`APIService::list_api_service`]"],["PatchAPIServiceResponse","Use `<PatchAPIServiceResponse as Response>::try_from_parts` to parse the HTTP response body of [`APIService::patch_api_service`]"],["PatchAPIServiceStatusResponse","Use `<PatchAPIServiceStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`APIService::patch_api_service_status`]"],["ReadAPIServiceResponse","Use `<ReadAPIServiceResponse as Response>::try_from_parts` to parse the HTTP response body of [`APIService::read_api_service`]"],["ReadAPIServiceStatusResponse","Use `<ReadAPIServiceStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`APIService::read_api_service_status`]"],["ReplaceAPIServiceResponse","Use `<ReplaceAPIServiceResponse as Response>::try_from_parts` to parse the HTTP response body of [`APIService::replace_api_service`]"],["ReplaceAPIServiceStatusResponse","Use `<ReplaceAPIServiceStatusResponse as Response>::try_from_parts` to parse the HTTP response body of [`APIService::replace_api_service_status`]"],["WatchAPIServiceResponse","Use `<WatchAPIServiceResponse as Response>::try_from_parts` to parse the HTTP response body of [`APIService::watch_api_service`]"]],"struct":[["APIService","APIService represents a server for a particular GroupVersion. Name must be \"version.group\"."],["APIServiceCondition","APIServiceCondition describes the state of an APIService at a particular point"],["APIServiceList","APIServiceList is a list of APIService objects."],["APIServiceSpec","APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification."],["APIServiceStatus","APIServiceStatus contains derived information about an API server"],["CreateAPIServiceOptional","Optional parameters of [`APIService::create_api_service`]"],["ReadAPIServiceOptional","Optional parameters of [`APIService::read_api_service`]"],["ReadAPIServiceStatusOptional","Optional parameters of [`APIService::read_api_service_status`]"],["ReplaceAPIServiceOptional","Optional parameters of [`APIService::replace_api_service`]"],["ReplaceAPIServiceStatusOptional","Optional parameters of [`APIService::replace_api_service_status`]"],["ServiceReference","ServiceReference holds a reference to Service.legacy.k8s.io"]]});